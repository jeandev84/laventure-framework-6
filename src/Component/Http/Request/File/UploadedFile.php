<?php
namespace Laventure\Component\Http\Request\File;

use Laventure\Component\Http\Request\Contract\UploadedFileInterface;

/**
 * @UploadedFile
 *
 * @author Jean-Claude <jeanyao@ymail.com>
 *
 * @license https://github.com/jeandev84/laventure-framework/blob/master/LICENSE
 *
 * @package Laventure\Component\Http\Request\File
*/
class UploadedFile extends File implements UploadedFileInterface
{


    /**
     * @param string $name
     *
     * @param string $mimeType
     *
     * @param string $tempFile
     *
     * @param string $error
     *
     * @param int $size
    */
    public function __construct(string $name, string $mime, string $temp, string $error, int $size)
    {
        parent::__construct($name, $mime, $temp, $error, $size);
    }




    /**
     * @return bool
    */
    public function hasError(): bool
    {
        return $this->error !== UPLOAD_ERR_OK;
    }



    /**
     * @return int
    */
    public function getError(): int
    {
        return parent::getError(); // TODO: Change the autogenerated stub
    }



    /**
     * @inheritDoc
    */
    public function moveTo($targetPath)
    {
        // TODO: Implement moveTo() method.
    }



    /**
     * @return void
    */
    public function move()
    {

    }




    /**
     * @inheritDoc
    */
    public function getClientFilename()
    {
        return $this->getOriginalName();
    }




    /**
     * @inheritDoc
     */
    public function getClientMediaType()
    {
        return $this->getMimeType();
    }



    /**
     * @inheritDoc
    */
    public function getStream()
    {
        // TODO: Implement getStream() method.
    }
}